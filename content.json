{"meta":{"title":"陌上花开，缓缓归兮","subtitle":"天行健，君子以自强不息；地势坤，君子以厚德载物.","description":null,"author":"buyingfei","url":"http://yoursite.com"},"pages":[{"title":"about","date":"2018-05-03T07:36:00.000Z","updated":"2018-05-07T03:20:54.024Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""}],"posts":[{"title":"tcpdump 抓包及Wireshark 解析包实例","slug":"crawlerpacket","date":"2018-05-07T02:17:45.000Z","updated":"2018-05-07T08:59:10.956Z","comments":true,"path":"2018/05/07/crawlerpacket/","link":"","permalink":"http://yoursite.com/2018/05/07/crawlerpacket/","excerpt":"","text":"场景：负责客服系统 –（电呼模块）客服需要知道当前有多少用户在打电话排队，此时有2 种解决方案，一种是轮询，一种就是保持长链，轮询会小号比较大资源，时效性也逊色于长链，所有技术选型为采用长链方式，即采用websocket + swoole。 安全分析：不开放websocket 端口对外，访问swoole服务，需要请求nginx 对外开放端口 即nginx server 模块中 listen 对应值，然后nginx 做代理转发，转发到swoole 服务对应端口。 生产环境模拟：线上使用nginx 反向代理，即我们请求uri 先发送给前端nginx 代理服务器，再有此代理服务器转发给实际应用所在服务器。开发过程中，没有反向代理，服务正常运行，到线上链接不上服务器，此时采用抓包分析线上问题。 此时自己开发机器[192.168.132.128]作为代理机，测试服务器[172.16.0.56] 作为服务机，模拟线上场景 自己开发机器[192.168.132.128]nginx 配置 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116upstream websocket &#123; server 127.0.0.1:9501;&#125;upstream globalWebsocket &#123; # 转发到测试机 server 172.16.0.56:9588;&#125;map $http_upgrade $connection_upgrade &#123; default upgrade; '' close;&#125;server &#123; listen 12345; #listen [::]:80; server_name tickets.2345.com ; charset utf-8; index index.html index.htm index.php default.html default.htm default.php; root /home/buyf/quest/backend/web; #include /home/buyf/quest.2345.com/backend/web.conf; #error_page 404 /404.html; # Deny access to PHP files in specific directory #location ~ /(wp-content|uploads|wp-includes|images)/.*\\.php$ &#123; deny all; &#125; location = /tickets &#123; rewrite .* /index.html last; &#125; location = /tickets/ &#123; rewrite .* /index.html last; &#125; location ~ /tickets &#123; rewrite ^/tickets(/.*) $1 last; &#125; location / &#123; client_max_body_size 1000m; set $new_uri $uri; add_header Access-Control-Allow-Origin '*'; add_header Access-Control-Allow-Methods 'GET,POST,OPTIONS'; try_files $uri $uri/ /index.php?$query_string; &#125; #location = /tickets/websocket &#123; # proxy_pass ws://tickets.2345.com:9501 ; #&#125; location ~ /appManage(/.*) &#123; set $root_path appManage; root /opt/case/dkwapp.2345.com/dkwapp/web; set $new_uri $1; try_files $1 $1/ /index.php?$query_string; &#125; location ~ /websocket &#123; proxy_pass http://websocket; proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection \"Upgrade\"; &#125; location ~ /globalWebsocket &#123; # proxy_pass http://tickets.2345.com:9588; proxy_pass http://globalWebsocket; proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection \"Upgrade\"; &#125; #include enable-php.conf; location ~ \\.php$ &#123; fastcgi_pass unix:/tmp/php-cgi.sock; fastcgi_index index.php; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; include fastcgi_params; fastcgi_param REQUEST_URI $new_uri; fastcgi_intercept_errors off; fastcgi_connect_timeout 300; fastcgi_send_timeout 300; fastcgi_read_timeout 300; &#125; location ~ .*\\.(gif|jpg|jpeg|png|bmp|swf)$ &#123; add_header Access-Control-Allow-Origin 'http://tickets.2345.com:8090'; add_header Access-Control-Allow-Methods 'GET,POST,OPTIONS'; expires 30d; &#125; location ~ .*\\.(js|css|json)?$ &#123; expires 12h; &#125; location ~ /.well-known &#123; allow all; &#125; location ~ /\\. &#123; deny all; &#125; access_log /home/wwwlogs/quest.2345.com.access.log; error_log /home/wwwlogs/quest.2345.com.error.log notice; &#125; 服务机[172.16.0.56] nginx 配置123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100upstream websocket &#123; server 127.0.0.1:9501;&#125;upstream globalWebsocket &#123; # 转发到本机9588 端口 server 127.0.0.1:9588;&#125;log_format post '$remote_addr - $remote_user [$time_local] \"$request\" ' '$status $body_bytes_sent $request_time $upstream_response_time \"$http_referer\" ' '\"$http_user_agent\" \"$http_x_forwarded_for\" body: $request_body';server &#123; listen 12345; server_name quest.2345.com 172.16.0.56 www.waptianqi.com; index index.html index.htm index.php; access_log logs/quest.2345.com_access.log main; error_log logs/quest.2345.com_error.log notice; set $next_root /opt/case/quest.2345.com/backend/web; charset utf-8; if ($request_uri ~ '/appManage') &#123; set $next_root /opt/case/dkwapp.2345.com/web; &#125; root $next_root; location = /appManage &#123; rewrite .* /index.html last; &#125; location = /appManage/ &#123; rewrite .* /index.html last; &#125; location = /appManage/index.html &#123; rewrite .* /index.html last; &#125; location /appManage &#123; rewrite ^/appManage(/.*) $1 last; &#125; location = /tickets &#123; rewrite .* /index.html last; &#125; location = /tickets/ &#123; rewrite .* /index.html last; &#125; location = /tickets/index.html &#123; rewrite .* /index.html last; &#125; location /tickets &#123; rewrite ^/tickets(/.*) $1 last; &#125; # websocket location = /websocket &#123; proxy_pass http://websocket; proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection \"Upgrade\"; proxy_read_timeout 3600s; &#125; location ~ /globalWebsocket &#123; proxy_pass http://globalWebsocket; proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection \"Upgrade\"; &#125; location / &#123; set $new_uri $uri; try_files $uri $uri/ /index.php?$query_string; &#125; location ~ \\.php$ &#123; fastcgi_pass 127.0.0.1:9002; fastcgi_index index.php; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; include fastcgi_params; fastcgi_param REQUEST_URI $new_uri; if ($request_method = 'POST') &#123; access_log logs/quest.2345.com_access.log post; &#125; # 开发使用 fastcgi_intercept_errors off; fastcgi_connect_timeout 300; fastcgi_send_timeout 300; fastcgi_read_timeout 300; &#125;&#125; 进行对9588 websocket 端口进行抓包1sudo tcpdump -i eth0 port 9588 -w /tmp/buyf.cap 使用Wireshark 进行网络分析通过返回值、tcp流、http流可以分析出整个通信过程。","categories":[{"name":"操作系统","slug":"操作系统","permalink":"http://yoursite.com/categories/操作系统/"}],"tags":[{"name":"网络抓包","slug":"网络抓包","permalink":"http://yoursite.com/tags/网络抓包/"}],"keywords":[{"name":"操作系统","slug":"操作系统","permalink":"http://yoursite.com/categories/操作系统/"}]},{"title":"hexo 初体验","slug":"hexo-1","date":"2018-05-03T08:24:07.000Z","updated":"2018-05-07T03:20:54.024Z","comments":true,"path":"2018/05/03/hexo-1/","link":"","permalink":"http://yoursite.com/2018/05/03/hexo-1/","excerpt":"","text":"为什么选择hexo ？之前php 版本个人博客，放在新浪sae上，更新不频繁，长时间不使用，被新浪收回资源，就想有没有免费、自己不需要维护相关服务的那？就觉得hexo 尝试下吧 有哪些优点那： 支持Markdown 不需要维护服务器，长时间不使用，不担心数据丢失，网站挂掉 快速、简洁、高效，迅速利用靓丽的主题生成静态网页 hexo 存在一个问题，安装好之后，如果更换电脑怎么办那？也是有办法的，在github 个人博客分支下，新建dev 分支，将hexo 生成文件都存放到dev 分支下，之后只需要安装好git、node 、hexo 就行具体hexo 安装参考 hexo 官方文档","categories":[{"name":"web开发","slug":"web开发","permalink":"http://yoursite.com/categories/web开发/"}],"tags":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/tags/前端/"}],"keywords":[{"name":"web开发","slug":"web开发","permalink":"http://yoursite.com/categories/web开发/"}]}]}