<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>陌上花开，缓缓归兮</title>
  
  <subtitle>天行健，君子以自强不息；地势坤，君子以厚德载物.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-06-25T10:24:33.572Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>buyingfei</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>composer 生成自己项目</title>
    <link href="http://yoursite.com/2018/06/25/composerRepo/"/>
    <id>http://yoursite.com/2018/06/25/composerRepo/</id>
    <published>2018-06-25T12:24:07.000Z</published>
    <updated>2018-06-25T10:24:33.572Z</updated>
    
    <content type="html"><![CDATA[<p>写一个插件，想能不能通过composer 来引入，这样更方便大家使用，开始探索之旅。</p><p><strong>github 上新建项目</strong><br>例如新建项目：<a href="https://github.com/buyingfei/buyingfei.github.io.git" target="_blank" rel="noopener">https://github.com/buyingfei/buyingfei.github.io.git</a></p><p><strong>git clone 到本地</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> 项目地址</span><br></pre></td></tr></table></figure></p><p><strong>composer init 生成composer.json 文件架构，并对composer.json 文件进行修改</strong><br>此为项目结构<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ tree .</span><br><span class="line">.</span><br><span class="line">├── composer.json</span><br><span class="line">├── example</span><br><span class="line">│   ├── cli_xml.php</span><br><span class="line">│   ├── composer_xml.php</span><br><span class="line">│   └── test.xml</span><br><span class="line">├── README.md</span><br><span class="line">├── src</span><br><span class="line">│   ├── ArrayToXML.php</span><br><span class="line">│   └── Exception.php</span><br><span class="line">└── vendor</span><br><span class="line">    ├── autoload.php</span><br><span class="line">    └── composer</span><br><span class="line">        ├── autoload_classmap.php</span><br><span class="line">        ├── autoload_namespaces.php</span><br><span class="line">        ├── autoload_psr4.php</span><br><span class="line">        ├── autoload_real.php</span><br><span class="line">        ├── autoload_static.php</span><br><span class="line">        ├── ClassLoader.php</span><br><span class="line">        └── LICENSE</span><br></pre></td></tr></table></figure></p><p>主要修改composer.json，增加psr-4,完成文件映射</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"autoload"</span>: &#123;</span><br><span class="line">        <span class="string">"psr-4"</span>: &#123;</span><br><span class="line">            <span class="string">"parseArray\\"</span>: <span class="string">"./src/"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><p><strong>生成composer vendor 等文件</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer dumpautoload</span><br></pre></td></tr></table></figure></p><p><strong>注册<a href="https://packagist.org" target="_blank" rel="noopener">https://packagist.org</a> 账号，并获取token</strong><br><img src="/source/packagisttoken.png" alt="token 界面"></p><p><strong>完成本地调试后，push  github 服务器，并进行代码同步设置</strong><br><img src="/source/githubpack.png" alt="github设置页"></p><p>complate！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;写一个插件，想能不能通过composer 来引入，这样更方便大家使用，开始探索之旅。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;github 上新建项目&lt;/strong&gt;&lt;br&gt;例如新建项目：&lt;a href=&quot;https://github.com/buyingfei/buyingfei
      
    
    </summary>
    
      <category term="web开发" scheme="http://yoursite.com/categories/web%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="composer" scheme="http://yoursite.com/tags/composer/"/>
    
  </entry>
  
  <entry>
    <title>php-fpm 性能调优</title>
    <link href="http://yoursite.com/2018/05/30/php-fpm/"/>
    <id>http://yoursite.com/2018/05/30/php-fpm/</id>
    <published>2018-05-30T02:11:56.000Z</published>
    <updated>2018-06-25T10:34:19.113Z</updated>
    
    <content type="html"><![CDATA[<p>前段时间，针对公司项目做了压力测试，本次做一次总结，并以本地环境和测试环境进行一次模拟,测试工具采用apache ab命令,测试过程注意观察nginx 错误日志，及php-fpm 错误日志，上线标准以不报错为准，并需要考虑系统需要为其它接口提供服务，进行斟酌<br>系统配置：</p><ul><li>数据库放置在测试环境 双核cpu，4G内存</li><li>测试服务器在本机：单核CPU，2G内存</li></ul><p>主要配置针对php-fpm 选项<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">user = buyf</span><br><span class="line">group = buyf</span><br><span class="line">pm = dynamic</span><br><span class="line">pm.max_children = 1024</span><br><span class="line">pm.start_servers = 1</span><br><span class="line">pm.min_spare_servers = 1</span><br><span class="line">pm.max_spare_servers = 8</span><br></pre></td></tr></table></figure></p><p><strong>调整之前</strong><br>开始前php-fpm 配置<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[global]</span><br><span class="line">pid = /usr/<span class="built_in">local</span>/php/var/run/php-fpm.pid</span><br><span class="line">error_log = /usr/<span class="built_in">local</span>/php/var/<span class="built_in">log</span>/php-fpm.log</span><br><span class="line">log_level = notice</span><br><span class="line"></span><br><span class="line">[www]</span><br><span class="line">listen = /tmp/php-cgi.sock</span><br><span class="line">listen.backlog = 4096</span><br><span class="line">listen.allowed_clients = 127.0.0.1</span><br><span class="line">listen.owner = buyf</span><br><span class="line">listen.group = buyf</span><br><span class="line">listen.mode = 0666</span><br><span class="line">user = buyf</span><br><span class="line">group = buyf</span><br><span class="line">pm = dynamic</span><br><span class="line">pm.max_children = 1024</span><br><span class="line">pm.start_servers = 1</span><br><span class="line">pm.min_spare_servers = 1</span><br><span class="line">pm.max_spare_servers = 8</span><br><span class="line">request_terminate_timeout = 100</span><br><span class="line">request_slowlog_timeout = 0</span><br><span class="line">slowlog = /var/<span class="built_in">log</span>/slow.log</span><br></pre></td></tr></table></figure></p><p>采用130 个并发，此时测试结果<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"> ab -c 130 -t 100 <span class="string">'http://tickets.2345.com:12345/tickets/m/help/getRootCategory?product=1&amp;type=0'</span></span><br><span class="line">This is ApacheBench, Version 2.3 &lt;<span class="variable">$Revision</span>: 655654 $&gt;</span><br><span class="line">Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/</span><br><span class="line">Licensed to The Apache Software Foundation, http://www.apache.org/</span><br><span class="line"></span><br><span class="line">Benchmarking tickets.2345.com (be patient)</span><br><span class="line">Completed 5000 requests</span><br><span class="line">Finished 7450 requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Server Software:        nginx</span><br><span class="line">Server Hostname:        tickets.2345.com</span><br><span class="line">Server Port:            12345</span><br><span class="line"></span><br><span class="line">Document Path:          /tickets/m/<span class="built_in">help</span>/getRootCategory?product=1&amp;<span class="built_in">type</span>=0</span><br><span class="line">Document Length:        298 bytes</span><br><span class="line"></span><br><span class="line">Concurrency Level:      130</span><br><span class="line">Time taken <span class="keyword">for</span> tests:   100.019 seconds</span><br><span class="line">Complete requests:      7450</span><br><span class="line">Failed requests:        0</span><br><span class="line">Write errors:           0</span><br><span class="line">Total transferred:      4298650 bytes</span><br><span class="line">HTML transferred:       2220100 bytes</span><br><span class="line">Requests per second:    74.49 [<span class="comment">#/sec] (mean)</span></span><br><span class="line">Time per request:       1745.297 [ms] (mean)</span><br><span class="line">Time per request:       13.425 [ms] (mean, across all concurrent requests)</span><br><span class="line">Transfer rate:          41.97 [Kbytes/sec] received</span><br><span class="line"></span><br><span class="line">Connection Times (ms)</span><br><span class="line">              min  mean[+/-sd] median   max</span><br><span class="line">Connect:        0    0   3.4      0      35</span><br><span class="line">Processing:    29 1729 270.2   1706    4722</span><br><span class="line">Waiting:       23 1729 270.3   1706    4722</span><br><span class="line">Total:         30 1730 269.5   1706    4722</span><br><span class="line"></span><br><span class="line">Percentage of the requests served within a certain time (ms)</span><br><span class="line">  50%   1706</span><br><span class="line">  66%   1753</span><br><span class="line">  75%   1791</span><br><span class="line">  80%   1821</span><br><span class="line">  90%   1938</span><br><span class="line">  95%   2254</span><br><span class="line">  98%   2451</span><br><span class="line">  99%   2563</span><br><span class="line"> 100%   4722 (longest request)</span><br></pre></td></tr></table></figure></p><p>此时所有请求都被正确处理，nginx 没有错误日志产生，php-fpm 有warn 报错：如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[30-May-2018 10:29:11] WARNING: [pool www] seems busy (m.start_servers, or pm.min/max_spare_servers), spawningidle, and 82 total children</span><br></pre></td></tr></table></figure></p><p>此时系统负载，cpu 占用率很高，但内存还有很大空余<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">top - 10:32:26 up 5 days, 17:56,  6 users,  load aver</span><br><span class="line">Tasks: 142 total,  21 running, 121 sleeping,   0 stop</span><br><span class="line">Cpu(s): 75.6%us, 20.1%sy,  0.0%ni,  0.0%id,  0.0%wa, </span><br><span class="line">Mem:   1906912k total,   829696k used,  1077216k free</span><br><span class="line">Swap:  2031612k total,    89856k used,  1941756k free</span><br></pre></td></tr></table></figure></p><p>此时调整并发为140，nginx 有大量错误日志产品，说明此时qps为130</p><p><strong>调整之后</strong></p><p>调整fpm参数为<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pm = dynamic</span><br><span class="line">pm.max_children = 1024</span><br><span class="line">pm.start_servers = 108</span><br><span class="line">pm.min_spare_servers = 108</span><br><span class="line">pm.max_spare_servers = 1024</span><br></pre></td></tr></table></figure></p><p>此时采用400 并发<br>测试结果如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">ab -c 400 -t 2 <span class="string">'http://tickets.2345.com:12345/tickets/m/help/getRootCategory?product=1&amp;type=0'</span></span><br><span class="line">This is ApacheBench, Version 2.3 &lt;<span class="variable">$Revision</span>: 655654 $&gt;</span><br><span class="line">Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/</span><br><span class="line">Licensed to The Apache Software Foundation, http://www.apache.org/</span><br><span class="line"></span><br><span class="line">Benchmarking tickets.2345.com (be patient)</span><br><span class="line">Finished 27 requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Server Software:        nginx</span><br><span class="line">Server Hostname:        tickets.2345.com</span><br><span class="line">Server Port:            12345</span><br><span class="line"></span><br><span class="line">Document Path:          /tickets/m/<span class="built_in">help</span>/getRootCategory?product=1&amp;<span class="built_in">type</span>=0</span><br><span class="line">Document Length:        298 bytes</span><br><span class="line"></span><br><span class="line">Concurrency Level:      400</span><br><span class="line">Time taken <span class="keyword">for</span> tests:   3.161 seconds</span><br><span class="line">Complete requests:      27</span><br><span class="line">Failed requests:        0</span><br><span class="line">Write errors:           0</span><br><span class="line">Total transferred:      15579 bytes</span><br><span class="line">HTML transferred:       8046 bytes</span><br><span class="line">Requests per second:    8.54 [<span class="comment">#/sec] (mean)</span></span><br><span class="line">Time per request:       46832.267 [ms] (mean)</span><br><span class="line">Time per request:       117.081 [ms] (mean, across all concurrent requests)</span><br><span class="line">Transfer rate:          4.81 [Kbytes/sec] received</span><br><span class="line"></span><br><span class="line">Connection Times (ms)</span><br><span class="line">              min  mean[+/-sd] median   max</span><br><span class="line">Connect:        0  214  42.7    222     222</span><br><span class="line">Processing:    38 1536 399.1   1540    2913</span><br><span class="line">Waiting:       22 1535 401.3   1540    2913</span><br><span class="line">Total:         38 1749 432.0   1762    3135</span><br><span class="line"></span><br><span class="line">Percentage of the requests served within a certain time (ms)</span><br><span class="line">  50%   1762</span><br><span class="line">  66%   1763</span><br><span class="line">  75%   1764</span><br><span class="line">  80%   1765</span><br><span class="line">  90%   1765</span><br><span class="line">  95%   1765</span><br><span class="line">  98%   3135</span><br><span class="line">  99%   3135</span><br><span class="line"> 100%   3135 (longest request)</span><br></pre></td></tr></table></figure></p><p>如果并发420 ，产生大量nginx 错误日志<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2018/05/30 10:46:03 [error] 86422<span class="comment">#0: *1844747 connect() to unix:/tmp/php-cgi.sock failed (11: Resource temporarily unavailable) while connecting to upstream, client: 127.0.0.1, server: tickets.2345.com, request: "GET /tickets/m/help/getRootCategory?product=1&amp;type=0 HTTP/1.0", upstream: "fastcgi://unix:/tmp/php-cgi.sock:", host: "tickets.2345.com:12345"</span></span><br></pre></td></tr></table></figure></p><p>此时系统负载<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">top - 10:47:35 up 5 days, 18:11,  6 users,  load average: 28.15, 12.47, 7.81</span><br><span class="line">Tasks: 482 total,  56 running, 426 sleeping,   0 stopped,   0 zombie</span><br><span class="line">Cpu(s): 71.1%us, 23.1%sy,  0.0%ni,  0.0%id,  0.0%wa,  1.2%hi,  4.7%si,  0.0%st</span><br><span class="line">Mem:   1906912k total,  1834432k used,    72480k free,    48024k buffers</span><br><span class="line">Swap:  2031612k total,    96184k used,  1935428k free,   168776k cached</span><br></pre></td></tr></table></figure></p><p>测试cpu、内存基本占用都已100%，达到系统瓶颈</p><p><strong>调整后qps 从130 到400 ，效率提高了3、4倍，可见是有质的提升。</strong></p><h3 id="进一步提升系统性能"><a href="#进一步提升系统性能" class="headerlink" title="进一步提升系统性能"></a>进一步提升系统性能</h3><p>1 采用opcache 进行缓存<br>2 增加机器，进行代理转发<br>3 采用swoole ，此时不需要进行php-fpm 转发，减少中间环节</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前段时间，针对公司项目做了压力测试，本次做一次总结，并以本地环境和测试环境进行一次模拟,测试工具采用apache ab命令,测试过程注意观察nginx 错误日志，及php-fpm 错误日志，上线标准以不报错为准，并需要考虑系统需要为其它接口提供服务，进行斟酌&lt;br&gt;系统配置
      
    
    </summary>
    
      <category term="压力测试" scheme="http://yoursite.com/categories/%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="测试" scheme="http://yoursite.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
      <category term="系统监控" scheme="http://yoursite.com/tags/%E7%B3%BB%E7%BB%9F%E7%9B%91%E6%8E%A7/"/>
    
  </entry>
  
  <entry>
    <title>系统监控之sysstat 命令</title>
    <link href="http://yoursite.com/2018/05/24/sysstatcmd/"/>
    <id>http://yoursite.com/2018/05/24/sysstatcmd/</id>
    <published>2018-05-24T14:49:08.000Z</published>
    <updated>2018-05-24T03:34:02.481Z</updated>
    
    <content type="html"><![CDATA[<p><strong>sysstat 工具简介</strong><br>sysstat 是 Linux 系统中的常用工具包。<br>在使用 Linux 系统时，常常会遇到各种各样的问题，比如系统容易死机或者运行速度突然变慢，这时我们常常猜测：是否硬盘空间不足，是否内存不足，是否 I/O 出现瓶颈，还是系统的核心参数出了问题？这时，我们应该考虑使用 sysstat 工具对系统做一个全面了解，分析系统的负载状况。</p><p><strong>sysstat 安装</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo yum -y install sysstat</span><br><span class="line"><span class="comment"># 安装成功后，会生成这个文件[/etc/cron.d/sysstat ] 定时生成系统统计信息</span></span><br><span class="line"><span class="comment"># sudo  cat /etc/cron.d/sysstat</span></span><br><span class="line"><span class="comment"># 默认是每10 分钟生成一次，开发环境修改为每一分钟生成一次统计信息 </span></span><br><span class="line"><span class="comment"># 默认生成日志文件路径[cd/var/log/sa]</span></span><br></pre></td></tr></table></figure></p><p>图示如下：<br><img src="/source/sysstatcron.png" alt="sysstat 定时统计脚本"></p><p><strong>输出进程队列长度和平均负载状态统计信息</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#输出进程队列长度和平均负载状态统计信息</span></span><br><span class="line"> [root@172.16.0.56:/var/<span class="built_in">log</span>/sa]$ sar -q</span><br><span class="line"> Linux 2.6.32-431.el6.x86_64 (node56) 05/23/2018 _x86_64_(2 CPU)</span><br><span class="line"> </span><br><span class="line"> <span class="comment">#系统正常运行实例</span></span><br><span class="line"> 12:00:01 AM   runq-sz  plist-sz   ldavg-1   ldavg-5  ldavg-15</span><br><span class="line"> 12:10:01 AM        26       339      0.19      0.88      1.11</span><br><span class="line"> 12:20:01 AM        27       333      0.57      1.02      1.10</span><br><span class="line"> 12:30:01 AM        30       345      0.81      0.87      0.98</span><br><span class="line"> 12:40:01 AM        26       340      0.07      0.44      0.75</span><br><span class="line"> 12:50:01 AM        28       331      0.05      0.21      0.49</span><br><span class="line"> 01:00:01 AM        32       359      0.12      0.13      0.32</span><br><span class="line"> 01:10:01 AM        25       344      0.06      0.08      0.18</span><br><span class="line"> <span class="comment"># 系统异常运行实例</span></span><br><span class="line"> 08:14:01 PM   runq-sz  plist-sz   ldavg-1   ldavg-5  ldavg-15</span><br><span class="line"> 08:15:01 PM         0       233      5.84      4.86      2.13</span><br><span class="line"> 08:16:01 PM         0       233      2.14      3.97      1.99</span><br><span class="line"> 08:17:03 PM         0       245      3.00      3.82      2.06</span><br><span class="line"> 08:18:01 PM         0       245      7.54      4.97      2.56</span><br><span class="line"> 08:19:01 PM         0       246      9.47      5.97      3.05</span><br><span class="line"> 08:20:01 PM         0       233      9.74      6.82      3.53</span><br><span class="line"> 08:21:01 PM         0       233      3.58      5.57      3.31</span><br><span class="line"> 08:22:01 PM         0       233      1.31      4.56      3.10</span><br></pre></td></tr></table></figure></p><p>输出项说明：</p><table><thead><tr><th>Tables</th><th style="text-align:center">Are</th></tr></thead><tbody><tr><td>runq-sz</td><td style="text-align:center">等待执行的任务队列长度，越长越阻塞</td></tr><tr><td>plist-sz</td><td style="text-align:center">进程列表中进程（processes）和线程（threads）的数量</td></tr><tr><td>ldavg-1</td><td style="text-align:center">最后1分钟的系统平均负载（System load average）</td></tr><tr><td>ldavg-5</td><td style="text-align:center">过去5分钟的系统平均负载</td></tr><tr><td>ldavg-15</td><td style="text-align:center">过去15分钟的系统平均负载</td></tr></tbody></table><ul><li>重点注意ldavg，代表 cpu 任务数，繁重程度,超过cpu 个数，为超负载运行 （注意观察负载变化是否剧烈）</li></ul><p><strong>输出CPU使用情况的统计信息</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@172.16.0.56:/var/<span class="built_in">log</span>/sa]$ sar -u</span><br><span class="line">Linux 2.6.32-431.el6.x86_64 (node56) 05/23/2018 _x86_64_(2 CPU)</span><br><span class="line"></span><br><span class="line"><span class="comment">#系统正常运行实例</span></span><br><span class="line">12:00:01 AM     CPU     %user     %nice   %system   %iowait    %steal     %idle</span><br><span class="line">12:10:01 AM     all      1.66      0.00      0.89      0.08      0.01     97.36</span><br><span class="line">12:20:01 AM     all      1.56      0.00      0.81      0.07      0.01     97.55</span><br><span class="line">12:30:01 AM     all      1.58      0.00      0.84      0.35      0.01     97.21</span><br><span class="line">12:40:01 AM     all      1.57      0.00      0.82      0.06      0.01     97.54</span><br><span class="line">12:50:01 AM     all      1.57      0.00      0.82      0.05      0.01     97.54</span><br><span class="line">01:00:01 AM     all      1.56      0.00      0.82      0.05      0.01     97.55</span><br><span class="line">01:10:01 AM     all      1.64      0.00      0.86      0.14      0.01     97.35</span><br><span class="line"></span><br><span class="line"><span class="comment">#系统异常运行实例</span></span><br><span class="line">08:14:01 PM     CPU     %user     %nice   %system   %iowait    %steal     %idle</span><br><span class="line">08:15:01 PM     all      0.25      0.00      1.21     31.99      0.00     66.55</span><br><span class="line">08:16:01 PM     all      0.27      0.00      0.71      0.59      0.00     98.44</span><br><span class="line">08:17:03 PM     all      0.43      0.00      7.97     78.37      0.00     13.23</span><br><span class="line">08:18:01 PM     all      0.18      0.00      4.14     95.68      0.00      0.00</span><br><span class="line">08:19:01 PM     all      0.40      0.00      4.48     95.12      0.00      0.00</span><br><span class="line">08:20:01 PM     all      0.22      0.00      3.84     89.52      0.00      6.41</span><br><span class="line">08:21:01 PM     all      0.27      0.00      0.87      0.49      0.00     98.37</span><br></pre></td></tr></table></figure></p><p>输出项说明：</p><table><thead><tr><th>cpu</th><th style="text-align:center">all 表示统计信息为所有 CPU 的平均值。</th></tr></thead><tbody><tr><td>%user</td><td style="text-align:center">显示在用户级别(application)运行使用 CPU 总时间的百分比。</td></tr><tr><td>%nice</td><td style="text-align:center">显示在用户级别，用于nice操作，所占用 CPU 总时间的百分比。</td></tr><tr><td>%system</td><td style="text-align:center">在核心级别(kernel)运行所使用 CPU 总时间的百分比。</td></tr><tr><td>%iowait</td><td style="text-align:center">cpu 等待io占用 CPU 总时间的百分比。（值越高，等待磁盘读写压力越大，瓶颈在磁盘）</td></tr><tr><td>%steal</td><td style="text-align:center">管理进程等待cpu 占用 CPU 总时间的百分比。（值越高，cpu 繁重程度越高）</td></tr><tr><td>%idle</td><td style="text-align:center">显示 CPU 空闲时间占用 CPU 总时间的百分比。</td></tr></tbody></table><ul><li>若 %iowait 的值过高，表示硬盘存在I/O瓶颈</li><li>若 %idle 的值高但系统响应慢时，有可能是 CPU 等待分配内存，此时应加大内存容量</li><li>若 %idle 的值持续低于 10，则系统的 CPU 处理能力相对较低，表明系统中最需要解决的资源是 CPU。</li></ul><p><strong>输出内存和交换空间的统计信息</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@172.16.0.56:/var/<span class="built_in">log</span>/sa]$ sar -r</span><br><span class="line">Linux 2.6.32-431.el6.x86_64 (node56) 05/23/2018 _x86_64_(2 CPU)</span><br><span class="line"></span><br><span class="line"><span class="comment">#系统正常</span></span><br><span class="line">08:14:01 PM kbmemfree kbmemused  %memused kbbuffers  kbcached  kbcommit   %commit</span><br><span class="line">08:15:01 PM   1073412    833500     43.71    167416     96632   1192820     30.29</span><br><span class="line">08:16:01 PM   1072668    834244     43.75    167572     97032   1192960     30.29</span><br><span class="line">08:17:03 PM   1037000    869912     45.62    167188    140820   1355556     34.42</span><br><span class="line">08:18:01 PM   1037396    869516     45.60    167220    140856   1355556     34.42</span><br><span class="line">08:19:01 PM   1035992    870920     45.67    167352    141992   1355556     34.42</span><br><span class="line">08:20:01 PM   1087212    819700     42.99    167372     94096   1192960     30.29</span><br><span class="line">08:21:01 PM   1086880    820032     43.00    167432     94460   1193108     30.29</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#系统异常</span></span><br><span class="line">12:00:01 AM kbmemfree kbmemused  %memused kbbuffers  kbcached  kbcommit   %commit</span><br><span class="line">12:10:01 AM    560300   3362440     85.72    636624   1060076   3352040     27.23</span><br><span class="line">12:20:01 AM    537124   3385616     86.31    636836   1079920   3378996     27.45</span><br><span class="line">12:30:01 AM    513536   3409204     86.91    637044   1096120   3410272     27.70</span><br><span class="line">12:40:01 AM    511468   3411272     86.96    637204   1103256   3357232     27.27</span><br><span class="line">12:50:01 AM    488416   3434324     87.55    637340   1124880   3389172     27.53</span><br><span class="line">01:00:01 AM    457144   3465596     88.35    637556   1134900   3407764     27.68</span><br></pre></td></tr></table></figure></p><p>输出项说明：</p><table><thead><tr><th>cpu</th><th style="text-align:center">all 表示统计信息为所有 CPU 的平均值。</th></tr></thead><tbody><tr><td>kbmemfree</td><td style="text-align:center">可用的空闲内存数量，单位为 KB</td></tr><tr><td>kbmemused</td><td style="text-align:center">已使用的内存数量（不包含内核使用的内存），单位为 KB</td></tr><tr><td>%memused</td><td style="text-align:center">已使用内存的百分数</td></tr><tr><td>kbbuffers</td><td style="text-align:center">磁盘块缓存的内存数量，单位为 KB</td></tr><tr><td>kbcached</td><td style="text-align:center">磁盘文件缓存的内存数量，单位为 KB</td></tr><tr><td>kbcached</td><td style="text-align:center">程序要执行下去，系统评估还需要多少缓存的内存数量，单位为 KB</td></tr></tbody></table><ul><li>如果 %memused +  %commit &gt; 100% ,内存很危险</li></ul><p><strong>物理内存放硬盘 情况</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@172.16.0.56:/var/<span class="built_in">log</span>/sa]$ sar -B</span><br><span class="line">Linux 2.6.32-431.el6.x86_64 (node56) 05/23/2018 _x86_64_(2 CPU)</span><br><span class="line"></span><br><span class="line">12:00:01 AM  pgpgin/s pgpgout/s   fault/s  majflt/s  pgfree/s pgscank/s pgscand/s pgsteal/s    %vmeff</span><br><span class="line">12:10:01 AM      0.29    138.03   5137.86      0.01   2500.29      0.00      0.00      0.00      0.00</span><br><span class="line">12:20:01 AM      0.45    136.06   4935.45      0.01   2409.97      0.00      0.11      0.11    100.00</span><br><span class="line">12:30:01 AM      0.13    135.86   5002.52      0.01   2419.22      0.00      0.05      0.05    100.00</span><br><span class="line">12:40:01 AM      0.09    135.66   5012.26      0.01   2436.21      0.00      0.11      0.11    100.00</span><br><span class="line">12:50:01 AM      0.00    135.86   4938.99      0.00   2416.47      0.00      0.11      0.11    100.00</span><br><span class="line">01:00:01 AM      0.00    136.01   5057.40      0.00   2445.28      0.00      0.11      0.11    100.00</span><br><span class="line">01:10:01 AM      0.49    145.58   5024.75      0.01   2445.67      0.00      0.00      0.00      0.00</span><br><span class="line">01:20:02 AM      0.00    137.24   4969.16      0.00   2430.44      0.00      0.16      0.16     98.96</span><br><span class="line">01:30:01 AM      0.00    136.91   4989.06      0.00   2403.75      0.00      0.11</span><br></pre></td></tr></table></figure></p><p>输出项说明：</p><table><thead><tr><th>table</th><th style="text-align:center">col</th></tr></thead><tbody><tr><td>pgpgin/s</td><td style="text-align:center">每秒钟从磁盘读入的系统页面的 KB 总数</td></tr><tr><td>pgpgout/s</td><td style="text-align:center">每秒钟向磁盘写出的系统页面的 KB 总数</td></tr><tr><td>fault/s</td><td style="text-align:center">系统每秒产生的页面失效(major + minor)数量</td></tr><tr><td>majflt/s</td><td style="text-align:center">系统每秒产生的页面失效(major)数量</td></tr></tbody></table><p><strong>显示I/O和传送速率的统计信息</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@172.16.0.56:/var/<span class="built_in">log</span>/sa]$ sar -b</span><br><span class="line">Linux 2.6.32-431.el6.x86_64 (node56) 05/23/2018 _x86_64_(2 CPU)</span><br><span class="line"></span><br><span class="line">12:00:01 AM       tps      rtps      wtps   bread/s   bwrtn/s</span><br><span class="line">12:10:01 AM      5.62      0.04      5.59      0.59    276.05</span><br><span class="line">12:20:01 AM      5.45      0.04      5.41      0.91    272.12</span><br><span class="line">12:30:01 AM      5.48      0.02      5.46      0.25    271.73</span><br><span class="line">12:40:01 AM      5.44      0.02      5.42      0.19    271.31</span><br><span class="line">12:50:01 AM      5.35      0.00      5.35      0.00    271.72</span><br><span class="line">01:00:01 AM      5.44      0.00      5.44      0.00    272.02</span><br><span class="line">01:10:01 AM      5.95      0.08      5.88      0.99    291.15</span><br></pre></td></tr></table></figure></p><p>输出项说明：</p><table><thead><tr><th>table</th><th style="text-align:center">col</th></tr></thead><tbody><tr><td>tps</td><td style="text-align:center">每秒钟 物理设备请求次数</td></tr><tr><td>rtps</td><td style="text-align:center">每秒从物理设备读入请求次数</td></tr><tr><td>wtps</td><td style="text-align:center">每秒向物理设备写入请求次</td></tr><tr><td>bread/s</td><td style="text-align:center">每秒从物理设备读入请求次数，单位为 块/s</td></tr><tr><td>bwrtn/s</td><td style="text-align:center">每秒向物理设备写入请求次，单位为 块/s</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;sysstat 工具简介&lt;/strong&gt;&lt;br&gt;sysstat 是 Linux 系统中的常用工具包。&lt;br&gt;在使用 Linux 系统时，常常会遇到各种各样的问题，比如系统容易死机或者运行速度突然变慢，这时我们常常猜测：是否硬盘空间不足，是否内存不足，是否 
      
    
    </summary>
    
      <category term="操作系统" scheme="http://yoursite.com/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="测试" scheme="http://yoursite.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
      <category term="系统监控" scheme="http://yoursite.com/tags/%E7%B3%BB%E7%BB%9F%E7%9B%91%E6%8E%A7/"/>
    
      <category term="sysstat" scheme="http://yoursite.com/tags/sysstat/"/>
    
  </entry>
  
  <entry>
    <title>压力测试之ab 找到系统qps及负载</title>
    <link href="http://yoursite.com/2018/05/24/abtool/"/>
    <id>http://yoursite.com/2018/05/24/abtool/</id>
    <published>2018-05-24T02:33:20.000Z</published>
    <updated>2018-05-24T06:34:16.311Z</updated>
    
    <content type="html"><![CDATA[<p>ab(Apache benchmark)是一款常用的压力测试工具。</p><p><strong>安装</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install httpd-tools</span><br></pre></td></tr></table></figure></p><p><strong>命令参数</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ ab -h</span><br><span class="line">Usage: ab [options] [http[s]://]hostname[:port]/path</span><br><span class="line">Options are:</span><br><span class="line">    -n requests     Number of requests to perform</span><br><span class="line">    -c concurrency  [并发数 常用] Number of multiple requests to make </span><br><span class="line">    -t timelimit    [持续请求时间 常用]Seconds to max. <span class="built_in">wait</span> <span class="keyword">for</span> responses</span><br><span class="line">    -b windowsize   Size of TCP send/receive buffer, <span class="keyword">in</span> bytes</span><br><span class="line">    -p postfile     File containing data to POST. Remember also to <span class="built_in">set</span> -T</span><br><span class="line">    -u putfile      File containing data to PUT. Remember also to <span class="built_in">set</span> -T</span><br><span class="line">    -T content-type Content-type header <span class="keyword">for</span> POSTing, eg.</span><br><span class="line">                    <span class="string">'application/x-www-form-urlencoded'</span></span><br><span class="line">                    Default is <span class="string">'text/plain'</span></span><br><span class="line">    -v verbosity    How much troubleshooting info to <span class="built_in">print</span></span><br><span class="line">    -w              Print out results <span class="keyword">in</span> HTML tables</span><br><span class="line">    -i              Use HEAD instead of GET</span><br><span class="line">    -x attributes   String to insert as table attributes</span><br><span class="line">    -y attributes   String to insert as tr attributes</span><br><span class="line">    -z attributes   String to insert as td or th attributes</span><br><span class="line">    -C attribute    Add cookie, eg. <span class="string">'Apache=1234. (repeatable)</span></span><br><span class="line"><span class="string">    -H attribute    Add Arbitrary header line, eg. '</span>Accept-Encoding: gzip<span class="string">'</span></span><br><span class="line"><span class="string">                    Inserted after all normal header lines. (repeatable)</span></span><br><span class="line"><span class="string">    -A attribute    Add Basic WWW Authentication, the attributes</span></span><br><span class="line"><span class="string">                    are a colon separated username and password.</span></span><br><span class="line"><span class="string">    -P attribute    Add Basic Proxy Authentication, the attributes</span></span><br><span class="line"><span class="string">                    are a colon separated username and password.</span></span><br><span class="line"><span class="string">    -X proxy:port   Proxyserver and port number to use</span></span><br><span class="line"><span class="string">    -V              Print version number and exit</span></span><br><span class="line"><span class="string">    -k              Use HTTP KeepAlive feature</span></span><br><span class="line"><span class="string">    -d              Do not show percentiles served table.</span></span><br><span class="line"><span class="string">    -S              Do not show confidence estimators and warnings.</span></span><br><span class="line"><span class="string">    -g filename     Output collected data to gnuplot format file.</span></span><br><span class="line"><span class="string">    -e filename     Output CSV file with percentages served</span></span><br><span class="line"><span class="string">    -r              Don'</span>t <span class="built_in">exit</span> on socket receive errors.</span><br><span class="line">    -h              Display usage information (this message)</span><br><span class="line">    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)</span><br><span class="line">    -f protocol     Specify SSL/TLS protocol (SSL2, SSL3, TLS1, or ALL)</span><br></pre></td></tr></table></figure></p><p>本次测试以是否发生错误为准[nginx 报错以及ab 返回结果是否有错误]，测试环境为本地虚拟机centos 系统</p><p>测试接口(以get 方式)<br><a href="http://tickets.2345.com:12345/tickets/m/help/getRootCategory?product=1&amp;type=0" target="_blank" rel="noopener">http://tickets.2345.com:12345/tickets/m/help/getRootCategory?product=1&amp;type=0</a></p><p><strong> 1 先并发200 同时请求</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">$ ab -t 10 -c 200 <span class="string">'http://tickets.2345.com:12345/tickets/m/help/getRootCategory?product=1&amp;type=0'</span></span><br><span class="line">This is ApacheBench, Version 2.3 &lt;<span class="variable">$Revision</span>: 655654 $&gt;</span><br><span class="line">Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/</span><br><span class="line">Licensed to The Apache Software Foundation, http://www.apache.org/</span><br><span class="line"></span><br><span class="line">Benchmarking tickets.2345.com (be patient)</span><br><span class="line">Completed 5000 requests</span><br><span class="line">Completed 10000 requests</span><br><span class="line">Completed 15000 requests</span><br><span class="line">Completed 20000 requests</span><br><span class="line">Completed 25000 requests</span><br><span class="line">Completed 30000 requests</span><br><span class="line">Finished 34664 requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Server Software:        nginx [web服务器软件及版本]</span><br><span class="line">Server Hostname:        tickets.2345.com [表示请求的URL中的主机部分名称]</span><br><span class="line">Server Port:            12345 [被测试的Web服务器的监听端口]</span><br><span class="line"></span><br><span class="line">Document Path:          /tickets/m/<span class="built_in">help</span>/getRootCategory?product=1&amp;<span class="built_in">type</span>=0 [ 请求的页面路径]</span><br><span class="line">Document Length:        298 bytes [页面大小]</span><br><span class="line"></span><br><span class="line">Concurrency Level:      200 [并发数]</span><br><span class="line">Time taken <span class="keyword">for</span> tests:   10.000 seconds [测试总共花费的时间]</span><br><span class="line">Complete requests:      34664 [完成的请求数]</span><br><span class="line">Failed requests:        34136 [失败的请求数，这里的失败是指请求的连接服务器、发送数据、接收数据等环节发生异常，以及无响应后超时的情况。对于超时时间的设置可以用ab的-t参数。如果接受到的http响应数据的头信息中含有2xx以外的状态码，则会在测试结果显示另一个名为“Non-2xx responses”的统计项，用于统计这部分请求数，这些请求并不算是失败的请求。</span><br><span class="line">只要出现Failed requests就会多一行数据来统计失败的原因，分别有Connect、Length、Exceptions。</span><br><span class="line">Connect 无法送出要求、目标主机连接失败、要求的过程中被中断。</span><br><span class="line">Length 响应的内容长度不一致 ( 以 Content-Length 头值为判断依据 )。</span><br><span class="line">Exception 发生无法预期的错误。]</span><br><span class="line">   (Connect: 0, Receive: 0, Length: 34136, Exceptions: 0)</span><br><span class="line">Write errors:           0 [ 写入错误]</span><br><span class="line">Non-2xx responses:      34136</span><br><span class="line">Total transferred:      11432992 bytes [总共传输字节数，包含http的头信息等。使用ab的-v参数即可查看详细的http头信息。]</span><br><span class="line">HTML transferred:       5823920 bytes [html字节数，实际的页面传递字节数。也就是减去了Total transferred中http响应数据中头信息的长度。]</span><br><span class="line">Requests per second:    3466.37 [<span class="comment">#/sec] (mean) [每秒处理的请求数，服务器的吞吐量]</span></span><br><span class="line">Time per request:       57.697 [ms] (mean) [用户平均请求等待时间]</span><br><span class="line">Time per request:       0.288 [ms] (mean, across all concurrent requests) [服务器平均处理时间]</span><br><span class="line">Transfer rate:          1116.49 [Kbytes/sec] received [平均传输速率（每秒收到的速率）。可以很好的说明服务器在处理能力达到限制时，其出口带宽的需求量。]</span><br><span class="line"></span><br><span class="line">Connection Times (ms) [压力测试时的连接处理时间。]</span><br><span class="line">              min  mean[+/-sd] median   max</span><br><span class="line">Connect:        0    0   1.2      0      17</span><br><span class="line">Processing:     7   53 276.4     20    2617</span><br><span class="line">Waiting:        7   53 276.4     20    2617</span><br><span class="line">Total:          9   53 276.7     20    2617</span><br><span class="line"></span><br><span class="line">Percentage of the requests served within a certain time (ms)</span><br><span class="line">  50%     20</span><br><span class="line">  66%     21</span><br><span class="line">  75%     22</span><br><span class="line">  80%     23</span><br><span class="line">  90%     24</span><br><span class="line">  95%     27</span><br><span class="line">  98%     34</span><br><span class="line">  99%   2443</span><br><span class="line"> 100%   2617 (longest request)</span><br></pre></td></tr></table></figure></p><p>结果分析：<br>当并发数为200 时，34664 个请求，34136 个错误，放弃这次结果</p><p><strong> 2 并发120 同时请求</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">$ ab -t 10 -c 120 <span class="string">'http://tickets.2345.com:12345/tickets/m/help/getRootCategory?product=1&amp;type=0'</span></span><br><span class="line">This is ApacheBench, Version 2.3 &lt;<span class="variable">$Revision</span>: 655654 $&gt;</span><br><span class="line">Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/</span><br><span class="line">Licensed to The Apache Software Foundation, http://www.apache.org/</span><br><span class="line"></span><br><span class="line">Benchmarking tickets.2345.com (be patient)</span><br><span class="line">Finished 903 requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Server Software:        nginx</span><br><span class="line">Server Hostname:        tickets.2345.com</span><br><span class="line">Server Port:            12345</span><br><span class="line"></span><br><span class="line">Document Path:          /tickets/m/<span class="built_in">help</span>/getRootCategory?product=1&amp;<span class="built_in">type</span>=0</span><br><span class="line">Document Length:        298 bytes</span><br><span class="line"></span><br><span class="line">Concurrency Level:      120</span><br><span class="line">Time taken <span class="keyword">for</span> tests:   10.010 seconds</span><br><span class="line">Complete requests:      903</span><br><span class="line">Failed requests:        0</span><br><span class="line">Write errors:           0</span><br><span class="line">Total transferred:      521031 bytes</span><br><span class="line">HTML transferred:       269094 bytes</span><br><span class="line">Requests per second:    90.21 [<span class="comment">#/sec] (mean)</span></span><br><span class="line">Time per request:       1330.250 [ms] (mean)</span><br><span class="line">Time per request:       11.085 [ms] (mean, across all concurrent requests)</span><br><span class="line">Transfer rate:          50.83 [Kbytes/sec] received</span><br><span class="line"></span><br><span class="line">Connection Times (ms)</span><br><span class="line">              min  mean[+/-sd] median   max</span><br><span class="line">Connect:        0    2   4.6      0      15</span><br><span class="line">Processing:    28 1243 307.5   1283    1678</span><br><span class="line">Waiting:       17 1243 307.6   1283    1678</span><br><span class="line">Total:         29 1245 303.8   1284    1678</span><br><span class="line"></span><br><span class="line">Percentage of the requests served within a certain time (ms)</span><br><span class="line">  50%   1283</span><br><span class="line">  66%   1306</span><br><span class="line">  75%   1319</span><br><span class="line">  80%   1335</span><br><span class="line">  90%   1645</span><br><span class="line">  95%   1660</span><br><span class="line">  98%   1669</span><br><span class="line">  99%   1671</span><br><span class="line"> 100%   1678 (longest request)</span><br></pre></td></tr></table></figure></p><p>结果分析：<br>当并发数为120 时，903 个请求，0 个错误，这次结果待考证，是否能承载更大负载</p><p><strong>3 并发130 同时请求</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ ab -t 10 -c 130 <span class="string">'http://tickets.2345.com:12345/tickets/m/help/getRootCategory?product=1&amp;type=0'</span></span><br><span class="line">This is ApacheBench, Version 2.3 &lt;<span class="variable">$Revision</span>: 655654 $&gt;</span><br><span class="line">Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/</span><br><span class="line">Licensed to The Apache Software Foundation, http://www.apache.org/</span><br><span class="line"></span><br><span class="line">Benchmarking tickets.2345.com (be patient)</span><br><span class="line">Finished 1063 requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Server Software:        nginx</span><br><span class="line">Server Hostname:        tickets.2345.com</span><br><span class="line">Server Port:            12345</span><br><span class="line"></span><br><span class="line">Document Path:          /tickets/m/<span class="built_in">help</span>/getRootCategory?product=1&amp;<span class="built_in">type</span>=0</span><br><span class="line">Document Length:        298 bytes</span><br><span class="line"></span><br><span class="line">Concurrency Level:      130</span><br><span class="line">Time taken <span class="keyword">for</span> tests:   10.007 seconds</span><br><span class="line">Complete requests:      1063</span><br><span class="line">Failed requests:        149</span><br><span class="line">   (Connect: 0, Receive: 0, Length: 149, Exceptions: 0)</span><br><span class="line">Write errors:           0</span><br><span class="line">Non-2xx responses:      149</span><br><span class="line">Total transferred:      575952 bytes</span><br><span class="line">HTML transferred:       297106 bytes</span><br><span class="line">Requests per second:    106.22 [<span class="comment">#/sec] (mean)</span></span><br><span class="line">Time per request:       1223.859 [ms] (mean)</span><br><span class="line">Time per request:       9.414 [ms] (mean, across all concurrent requests)</span><br><span class="line">Transfer rate:          56.20 [Kbytes/sec] received</span><br><span class="line"></span><br><span class="line">Connection Times (ms)</span><br><span class="line">              min  mean[+/-sd] median   max</span><br><span class="line">Connect:        0    1   3.2      0      10</span><br><span class="line">Processing:     0 1133 538.7   1398    1557</span><br><span class="line">Waiting:        0 1133 538.8   1398    1557</span><br><span class="line">Total:          0 1134 537.9   1398    1557</span><br><span class="line"></span><br><span class="line">Percentage of the requests served within a certain time (ms)</span><br><span class="line">  50%   1398</span><br><span class="line">  66%   1416</span><br><span class="line">  75%   1423</span><br><span class="line">  80%   1429</span><br><span class="line">  90%   1535</span><br><span class="line">  95%   1543</span><br><span class="line">  98%   1549</span><br><span class="line">  99%   1552</span><br><span class="line"> 100%   1557 (longest request)</span><br></pre></td></tr></table></figure><p>结果分析：<br>当并发数为130 时，1063 个请求，149 个错误，这次结果待考证，此时请求QPS 在90~100 之间</p><p>这是否达到系统极限那？<br>通过sar -q、sar -u、sar -r 分析<br>系统cpu 占用还不到50%，IO 没有等待时长、内存也在系统承受范围之内，此时需要调整nginx 、php-fpm 等相关配置，来充分发挥系统性能。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;ab(Apache benchmark)是一款常用的压力测试工具。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安装&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span c
      
    
    </summary>
    
      <category term="压力测试" scheme="http://yoursite.com/categories/%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="压力测试" scheme="http://yoursite.com/tags/%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95/"/>
    
      <category term="ab" scheme="http://yoursite.com/tags/ab/"/>
    
  </entry>
  
  <entry>
    <title>系统监控之top 命令</title>
    <link href="http://yoursite.com/2018/05/23/topcmd/"/>
    <id>http://yoursite.com/2018/05/23/topcmd/</id>
    <published>2018-05-23T09:42:05.000Z</published>
    <updated>2018-05-24T03:34:18.460Z</updated>
    
    <content type="html"><![CDATA[<p>TOP命令是Linux下常用的性能分析工具，能够实时显示系统中各个进程的资源占用状况。可以根据top 命令初步判断系统发生问题<br>下面是对top 命令一些常用操作进行归总，方便分析系统问题<br>结果图示：默认以cpu 占用率倒序排列</p><p><img src="/source/top.png" alt="top 命令结果"></p><p><strong>进程各字段含义：</strong><br>在top 命令在，按F 或者f 得到如下</p><p><img src="/source/topprocname.png" alt=" top 各字段含义"></p><p><strong>得到帮助</strong><br>在top 命令在，按 h 得到如下</p><p><img src="/source/tophelp.png" alt=" top help"></p><p><strong>根据内存使用情况倒序排列</strong><br>在top 命令在，按O后，按n，得到如下图示<br><img src="/source/topsort.png" alt=" top sort"></p><p>结果如下<br><img src="/source/topsortresult.png" alt=" top sort result"></p><p><strong>将当前所有系统进程，按内存占用情况倒序排列</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top -ab -n 1</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;TOP命令是Linux下常用的性能分析工具，能够实时显示系统中各个进程的资源占用状况。可以根据top 命令初步判断系统发生问题&lt;br&gt;下面是对top 命令一些常用操作进行归总，方便分析系统问题&lt;br&gt;结果图示：默认以cpu 占用率倒序排列&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;
      
    
    </summary>
    
      <category term="操作系统" scheme="http://yoursite.com/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="测试" scheme="http://yoursite.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
      <category term="系统监控" scheme="http://yoursite.com/tags/%E7%B3%BB%E7%BB%9F%E7%9B%91%E6%8E%A7/"/>
    
      <category term="top" scheme="http://yoursite.com/tags/top/"/>
    
  </entry>
  
  <entry>
    <title>压力测试 之系统io 性能</title>
    <link href="http://yoursite.com/2018/05/21/fiocmd/"/>
    <id>http://yoursite.com/2018/05/21/fiocmd/</id>
    <published>2018-05-21T12:49:08.000Z</published>
    <updated>2018-05-24T03:34:51.686Z</updated>
    
    <content type="html"><![CDATA[<p><strong>fio 工具简介</strong><br>Linux系统上采用fio工具来对硬盘进行的IO测试。</p><p><strong>sysstat 安装</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum -y install fio</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">可以使用fio -<span class="built_in">help</span>查看每个参数，具体的参数左右可以在官网查看how to文档，如下为几个常见的参数描述</span><br><span class="line">filename=/tmp/fio　支持文件系统或者裸设备，-filename=/dev/sda2或-filename=/dev/sdb</span><br><span class="line">direct=1                 测试过程绕过机器自带的buffer，使测试结果更真实</span><br><span class="line">rw=randwread             测试随机读的I/O</span><br><span class="line">rw=randwrite             测试随机写的I/O</span><br><span class="line">rw=randrw                测试随机混合写和读的I/O</span><br><span class="line">rw=<span class="built_in">read</span>                  测试顺序读的I/O</span><br><span class="line">rw=write                 测试顺序写的I/O</span><br><span class="line">rw=rw                    测试顺序混合写和读的I/O</span><br><span class="line">bs=4k                    单次io的块文件大小为4k</span><br><span class="line">bsrange=512-2048         同上，提定数据块的大小范围</span><br><span class="line">size=5g                  本次的测试文件大小为5g，以每次4k的io进行测试</span><br><span class="line">numjobs=30               本次的测试线程为30</span><br><span class="line">runtime=1000             测试时间为1000秒，如果不写则一直将5g文件分4k每次写完为止</span><br><span class="line">ioengine=psync           io引擎使用pync方式，如果要使用libaio引擎，需要yum install libaio-devel包</span><br><span class="line">rwmixwrite=30            在混合读写的模式下，写占30%</span><br><span class="line">group_reporting          关于显示结果的，汇总每个进程的信息</span><br><span class="line">此外</span><br><span class="line">lockmem=1g               只使用1g内存进行测试</span><br><span class="line">zero_buffers             用0初始化系统buffer</span><br><span class="line">nrfiles=8                每个进程生成文件的数量</span><br></pre></td></tr></table></figure><p><strong>fio测试场景及生成报告详解</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#100%随机，100%读， 4K</span></span><br><span class="line">fio -filename=/tmp/fio -direct=1 -iodepth 1 -thread -rw=randread -ioengine=psync -bs=4k -size=1000G -numjobs=10 -runtime=30 -group_reporting -name=fiotest</span><br><span class="line"></span><br><span class="line"><span class="comment">#100%随机，100%写， 4K</span></span><br><span class="line">fio -filename=/tmp/fio -direct=1 -iodepth 1 -thread -rw=randwrite -ioengine=psync -bs=4k -size=1000G -numjobs=10 -runtime=30 -group_reporting -name=fiotest</span><br><span class="line"></span><br><span class="line"><span class="comment">#100%顺序，100%读 ，4K</span></span><br><span class="line">fio -filename=/tmp/fio -direct=1 -iodepth 1 -thread -rw=<span class="built_in">read</span> -ioengine=psync -bs=4k -size=1000G -numjobs=10 -runtime=30 -group_reporting -name=fiotest</span><br><span class="line"></span><br><span class="line"><span class="comment">#100%顺序，100%写 ，4K</span></span><br><span class="line">fio -filename=/tmp/fio -direct=1 -iodepth 1 -thread -rw=write -ioengine=psync -bs=4k -size=1000G -numjobs=10 -runtime=30 -group_reporting -name=fiotest</span><br><span class="line"></span><br><span class="line"><span class="comment">#100%随机，70%读，30%写 4K</span></span><br><span class="line">fio -filename=/tmp/fio -direct=1 -iodepth 1 -thread -rw=randrw -rwmixread=70 -ioengine=psync -bs=4k -size=1000G -numjobs=10 -runtime=30 -group_reporting -name=fiotest</span><br></pre></td></tr></table></figure></p><p>运行一下命令，进行分析<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fio -filename=/tmp/fio -direct=1 -iodepth 1 -thread -rw=randrw -rwmixread=70 -ioengine=psync -bs=4k -size=1000G -numjobs=10 -runtime=30 -group_reporting -name=fiotest</span><br></pre></td></tr></table></figure></p><p>结果图示：<br><img src="/source/fio.png" alt="fio"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">io=执行了多少M的IO</span><br><span class="line"></span><br><span class="line">bw=平均IO带宽</span><br><span class="line">iops=IOPS</span><br><span class="line">runt=线程运行时间</span><br><span class="line">slat=提交延迟</span><br><span class="line">clat=完成延迟</span><br><span class="line">lat=响应时间</span><br><span class="line">bw=带宽</span><br><span class="line">cpu=利用率</span><br><span class="line">IO depths=io队列</span><br><span class="line">IO submit=单个IO提交要提交的IO数</span><br><span class="line">IO complete=Like the above submit number, but <span class="keyword">for</span> completions instead.</span><br><span class="line">IO issued=The number of <span class="built_in">read</span>/write requests issued, and how many of them were short.</span><br><span class="line">IO latencies=IO完延迟的分布</span><br><span class="line"></span><br><span class="line">io=总共执行了多少size的IO</span><br><span class="line">aggrb=group总带宽</span><br><span class="line">minb=最小.平均带宽.</span><br><span class="line">maxb=最大平均带宽.</span><br><span class="line">mint=group中线程的最短运行时间.</span><br><span class="line">maxt=group中线程的最长运行时间.</span><br><span class="line"></span><br><span class="line">ios=所有group总共执行的IO数.</span><br><span class="line">merge=总共发生的IO合并数.</span><br><span class="line">ticks=Number of ticks we kept the disk busy.</span><br><span class="line">io_queue=花费在队列上的总共时间.</span><br><span class="line">util=磁盘利用率</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;fio 工具简介&lt;/strong&gt;&lt;br&gt;Linux系统上采用fio工具来对硬盘进行的IO测试。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;sysstat 安装&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;
      
    
    </summary>
    
      <category term="压力测试" scheme="http://yoursite.com/categories/%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="测试" scheme="http://yoursite.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
      <category term="fio" scheme="http://yoursite.com/tags/fio/"/>
    
      <category term="系统监控" scheme="http://yoursite.com/tags/%E7%B3%BB%E7%BB%9F%E7%9B%91%E6%8E%A7/"/>
    
  </entry>
  
  <entry>
    <title>乐观锁及其实现</title>
    <link href="http://yoursite.com/2018/05/15/optimismlock/"/>
    <id>http://yoursite.com/2018/05/15/optimismlock/</id>
    <published>2018-05-15T06:36:06.000Z</published>
    <updated>2018-05-24T03:33:46.524Z</updated>
    
    <content type="html"><![CDATA[<p><strong>为什么需要锁（并发控制）？</strong><br>在多用户环境中，在同一时间可能会有多个用户更新相同的记录，这会产生冲突。这就是著名的并发性问题。</p><p><strong>典型的冲突</strong></p><ul><li>丢失更新：一个事务的更新覆盖了其它事务的更新结果，就是所谓的更新丢失。例如：用户A把值从6改为2，用户B把值从2改为6，则用户A丢失了他的更新。</li><li>脏读：当一个事务读取其它完成一半事务的记录时，就会发生脏读取。例如：用户A,B看到的值都是6，用户B把值改为2，用户A读到的值仍为6。</li></ul><p>为了解决这些并发带来的问题。 我们需要引入并发控制机制。</p><p><strong>并发控制机制</strong></p><ul><li>悲观锁：假定会发生并发冲突，屏蔽一切可能违反数据完整性的操作。</li><li>乐观锁：假设不会发生并发冲突，只在提交操作时检查是否违反数据完整性。 乐观锁不能解决脏读的问题。</li></ul><p>乐观锁假设认为数据一般情况下不会造成冲突，所以在数据进行提交更新的时候，才会正式对数据的冲突与否进行检测，如果发现冲突了，则让返回用户错误的信息，让用户决定如何去做。</p><p>在对数据库进行处理的时候，乐观锁并不会使用数据库提供的锁机制。一般的实现乐观锁的方式就是记录数据版本。</p><pre><code>数据版本,为数据增加的一个版本标识。当读取数据时，将版本标识的值一同读出，数据每更新一次，    同时对版本标识进行更新。当我们提交更新的时候，判断数据库表对应记录的当前版本信息与第一次取出来的版本标识进行比对，    如果数据库表当前版本号与第一次取出来的版本标识值相等，    则予以更新，否则认为是过期数据。</code></pre><p>  实现数据版本有两种方式，第一种是使用版本号，第二种是使用时间戳。</p><p>  <strong>使用版本号实现乐观锁</strong></p><p>  使用版本号时，可以在数据初始化时指定一个版本号，每次对数据的更新操作都对版本号执行+1操作。并判断当前版本号是不是该数据的最新的版本号。<br>  <img src="/source/leguanlock.png" alt="版本号 乐观锁"></p>  <figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>查询出商品信息</span><br><span class="line"><span class="keyword">select</span> (status,status,version) from t_goods where id=#&#123;id&#125;</span><br><span class="line"><span class="number">2.</span>根据商品信息生成订单</span><br><span class="line"><span class="number">3.</span>修改商品status为<span class="number">2</span></span><br><span class="line">update t_goods </span><br><span class="line">set status=<span class="number">2</span>,version=version+<span class="number">1</span></span><br><span class="line">where id=#&#123;id&#125; and version=#&#123;version&#125;;</span><br></pre></td></tr></table></figure><p>  <strong>库表设计</strong><br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE `goods` (</span><br><span class="line">   `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">   `name` varchar(20) DEFAULT NULL COMMENT &apos;名称&apos;,</span><br><span class="line">   `status` tinyint(4) DEFAULT &apos;0&apos; COMMENT &apos;0 未下单；1 已下单&apos;,</span><br><span class="line">   `cnt` int(11) DEFAULT NULL COMMENT &apos;商品数量&apos;,</span><br><span class="line">   `version` int(11) DEFAULT &apos;1&apos; COMMENT &apos;版本号&apos;,</span><br><span class="line">   PRIMARY KEY (`id`)</span><br><span class="line"> ) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4</span><br></pre></td></tr></table></figure></p><p><strong>golang 代码实现</strong><br><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"database/sql"</span></span><br><span class="line">_ <span class="string">"github.com/go-sql-driver/mysql"</span></span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"strconv"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> db, err = sql.Open(<span class="string">"mysql"</span>, <span class="string">"buyf:123456@tcp(192.168.132.128:3306)/tmpdb?charset=utf8"</span>) <span class="comment">//第一个参数为驱动名</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">checkErr</span><span class="params">(err error)</span></span>  &#123;</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getGoodsById</span><span class="params">(id <span class="keyword">int</span>)</span> <span class="params">(<span class="keyword">int</span>,<span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> cnt,version <span class="keyword">int</span></span><br><span class="line">err  := db.QueryRow(<span class="string">"select cnt,version from goods where id = ?"</span>, id).Scan(&amp;cnt, &amp;version)</span><br><span class="line">checkErr(err)</span><br><span class="line"><span class="keyword">return</span> cnt,version</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">printGoodsInfo</span><span class="params">(id <span class="keyword">int</span>,cnt <span class="keyword">int</span>,version <span class="keyword">int</span>)</span></span>  &#123;</span><br><span class="line"><span class="comment">// int  to string string()</span></span><br><span class="line"><span class="comment">// string(int num) 为空</span></span><br><span class="line">fmt.Println(<span class="string">"商品编号： "</span>+ strconv.Itoa(id) + <span class="string">" 当前库存："</span>+ strconv.Itoa(cnt) + <span class="string">" 当前版本："</span>+ strconv.Itoa(version))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">modifyGoodsNum</span><span class="params">(id <span class="keyword">int</span>,version <span class="keyword">int</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">cnt,_ := getGoodsById(id)</span><br><span class="line"><span class="keyword">if</span> cnt &lt;= <span class="number">0</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"商品编号： "</span>+ strconv.Itoa(id) + <span class="string">"数量小于1，不能下单"</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line">stmt, err := db.Prepare(<span class="string">`update goods set cnt = cnt -1 ,version = version + 1 where id = ? and version = ? `</span>)</span><br><span class="line">checkErr(err)</span><br><span class="line">res, err := stmt.Exec(id, version)</span><br><span class="line">checkErr(err)</span><br><span class="line"></span><br><span class="line">num, err := res.RowsAffected()</span><br><span class="line">checkErr(err)</span><br><span class="line"><span class="keyword">if</span> num &lt;= <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">checkErr(err)</span><br><span class="line"><span class="keyword">var</span> cnt1,version1 = getGoodsById(<span class="number">1</span>)</span><br><span class="line">printGoodsInfo(<span class="number">1</span>,cnt1,version1)</span><br><span class="line"><span class="keyword">var</span> cnt2,version2 = getGoodsById(<span class="number">1</span>)</span><br><span class="line">printGoodsInfo(<span class="number">1</span>,cnt2,version2)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改需要传入版本号，实际过程中，可以加入事务，进行提交和回滚</span></span><br><span class="line"><span class="keyword">if</span> modifyGoodsNum(<span class="number">1</span>,version1) &#123;</span><br><span class="line">fmt.Println(<span class="string">"乐观锁 操作成功"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> !modifyGoodsNum(<span class="number">1</span>,version2) &#123;</span><br><span class="line">fmt.Println(<span class="string">"乐观锁 操作失败"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>参考链接：<br><a href="http://www.hollischuang.com/archives/934" target="_blank" rel="noopener">深入理解乐观锁与悲观锁</a><br><a href="http://www.cnblogs.com/0201zcr/p/4782283.html" target="_blank" rel="noopener">乐观锁与悲观锁——解决并发问题</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;为什么需要锁（并发控制）？&lt;/strong&gt;&lt;br&gt;在多用户环境中，在同一时间可能会有多个用户更新相同的记录，这会产生冲突。这就是著名的并发性问题。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;典型的冲突&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;丢失更新：一个事务的更
      
    
    </summary>
    
      <category term="golang" scheme="http://yoursite.com/categories/golang/"/>
    
      <category term="数据库" scheme="http://yoursite.com/categories/golang/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="golang" scheme="http://yoursite.com/tags/golang/"/>
    
      <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>简单 golang 接口限流</title>
    <link href="http://yoursite.com/2018/05/11/limitqps/"/>
    <id>http://yoursite.com/2018/05/11/limitqps/</id>
    <published>2018-05-11T07:49:13.000Z</published>
    <updated>2018-05-24T03:33:34.859Z</updated>
    
    <content type="html"><![CDATA[<p>曾经在一个<a href="http://jinnianshilongnian.iteye.com/blog/2305117" target="_blank" rel="noopener">大神的博客</a>里看到这样一句话：在开发高并发系统时，有三把利器用来保护系统：缓存、降级和限流。那么何为限流呢？顾名思义，限流就是限制流量，就像你宽带包了1个G的流量，用完了就没了。通过限流，我们可以很好地控制系统的qps，从而达到保护系统的目的。本篇文章将会介绍一下计数器限流算法并用golang 实现。</p><p><strong><em>计数器法</em></strong></p><p>计数器法是限流算法里最简单也是最容易实现的一种算法。比如我们规定，对于A接口来说，我们1分钟的访问次数不能超过100个。那么我们可以这么做：在一开始的时候，我们可以设置一个计数器counter，每当一个请求过来的时候，counter就加1，如果counter的值大于100并且该请求与第一个请求的间隔时间还在1分钟之内，那么说明请求数过多；如果该请求与第一个请求的间隔时间大于1分钟，且counter的值还在限流范围内，那么就重置counter，具体算法的示意图如下：<br><img src="/source/limitqps.png" alt="计数器算法"></p><p>伪代码 如下：<br><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">public class CounterDemo &#123;</span><br><span class="line">    public long timeStamp = getNowTime();</span><br><span class="line">    public <span class="keyword">int</span> reqCount = <span class="number">0</span>;</span><br><span class="line">    public final <span class="keyword">int</span> limit = <span class="number">100</span>; <span class="comment">// 时间窗口内最大请求数</span></span><br><span class="line">    public final long interval = <span class="number">1000</span>; <span class="comment">// 时间窗口ms</span></span><br><span class="line">    public boolean grant() &#123;</span><br><span class="line">        long now = getNowTime();</span><br><span class="line">        <span class="keyword">if</span> (now &lt; timeStamp + interval) &#123;</span><br><span class="line">            <span class="comment">// 在时间窗口内</span></span><br><span class="line">            reqCount++;</span><br><span class="line">            <span class="comment">// 判断当前时间窗口内是否超过最大请求控制数</span></span><br><span class="line">            <span class="keyword">return</span> reqCount &lt;= limit;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            timeStamp = now;</span><br><span class="line">            <span class="comment">// 超时后重置</span></span><br><span class="line">            reqCount = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>实现代码：<br><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"io"</span></span><br><span class="line"><span class="string">"net/http"</span></span><br><span class="line"><span class="string">"sync"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line"><span class="string">"strings"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> RequestLimitStruct <span class="keyword">struct</span> &#123;</span><br><span class="line">RequestCnt <span class="keyword">map</span>[<span class="keyword">string</span>] <span class="keyword">int</span></span><br><span class="line">Lock     sync.Mutex</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> RequestLimitService <span class="keyword">struct</span> &#123;</span><br><span class="line">Interval time.Duration</span><br><span class="line">MaxCount <span class="keyword">int</span></span><br><span class="line">RequestLimit RequestLimitStruct</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewRequestLimitService</span><span class="params">(interval time.Duration, maxCnt <span class="keyword">int</span>)</span> *<span class="title">RequestLimitService</span></span> &#123;</span><br><span class="line">reqLimit := &amp;RequestLimitService&#123;</span><br><span class="line">Interval: interval,</span><br><span class="line">MaxCount: maxCnt,</span><br><span class="line">&#125;</span><br><span class="line">reqLimit.RequestLimit.RequestCnt = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">ticker := time.NewTicker(interval)</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">&lt;-ticker.C</span><br><span class="line">reqLimit.RequestLimit.Lock.Lock()</span><br><span class="line">fmt.Println(<span class="string">"Reset Count..."</span>)</span><br><span class="line"><span class="keyword">for</span> key,_ := <span class="keyword">range</span> reqLimit.RequestLimit.RequestCnt &#123;</span><br><span class="line">reqLimit.RequestLimit.RequestCnt[key] = <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line">reqLimit.RequestLimit.Lock.Unlock()</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> reqLimit</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(reqLimit *RequestLimitService)</span> <span class="title">Increase</span><span class="params">(r *http.Request)</span></span> &#123;</span><br><span class="line">reqLimit.RequestLimit.Lock.Lock()</span><br><span class="line"><span class="keyword">defer</span> reqLimit.RequestLimit.Lock.Unlock()</span><br><span class="line"></span><br><span class="line">remoteIP := strings.Split(r.RemoteAddr, <span class="string">":"</span>)[<span class="number">0</span>]</span><br><span class="line">requestUri := r.RequestURI</span><br><span class="line">key := remoteIP + <span class="keyword">string</span>(<span class="string">':'</span>) + requestUri</span><br><span class="line"><span class="keyword">if</span> v, exists := reqLimit.RequestLimit.RequestCnt[key]; exists &#123;</span><br><span class="line">reqLimit.RequestLimit.RequestCnt[key] = v + <span class="number">1</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">reqLimit.RequestLimit.RequestCnt[key] = <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">"请求"</span> + key + <span class="string">" "</span> + <span class="keyword">string</span>(reqLimit.RequestLimit.RequestCnt[key]))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(reqLimit *RequestLimitService)</span> <span class="title">IsAvailable</span><span class="params">(r *http.Request)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">remoteIP := strings.Split(r.RemoteAddr, <span class="string">":"</span>)[<span class="number">0</span>]</span><br><span class="line">requestUri := r.RequestURI</span><br><span class="line">key := remoteIP + <span class="keyword">string</span>(<span class="string">':'</span>) + requestUri</span><br><span class="line">reqLimit.RequestLimit.Lock.Lock()</span><br><span class="line"><span class="keyword">defer</span> reqLimit.RequestLimit.Lock.Unlock()</span><br><span class="line"><span class="keyword">if</span> v, exists := reqLimit.RequestLimit.RequestCnt[key]; exists &#123;</span><br><span class="line">reqLimit.RequestLimit.RequestCnt[key] = v + <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> reqLimit.RequestLimit.RequestCnt[key] &lt; reqLimit.MaxCount</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> RequestLimit = NewRequestLimitService(<span class="number">10</span>*time.Second, <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">HttpHander</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">remoteIP := strings.Split(r.RemoteAddr, <span class="string">":"</span>)[<span class="number">0</span>]</span><br><span class="line">requestUri := r.RequestURI</span><br><span class="line">key := remoteIP + <span class="keyword">string</span>(<span class="string">':'</span>) + requestUri</span><br><span class="line"><span class="keyword">if</span> RequestLimit.IsAvailable(r) &#123;</span><br><span class="line">RequestLimit.Increase(r)</span><br><span class="line">fmt.Println(RequestLimit.RequestLimit.RequestCnt[key])</span><br><span class="line">io.WriteString(w, <span class="string">"Hello world!\n"</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"Reach request limiting!"</span>)</span><br><span class="line">io.WriteString(w, <span class="string">"Reach request limit!\n"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"Server Started!"</span>)</span><br><span class="line">http.HandleFunc(<span class="string">"/"</span>, HttpHander)</span><br><span class="line">http.ListenAndServe(<span class="string">":8000"</span>, <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>发送请求：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">seq 100 | xargs -P10 -I% curl localhost:8000</span><br></pre></td></tr></table></figure></p><p>相应结果：</p><p><img src="/source/qpslimitresult.png" alt="相应结果"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;曾经在一个&lt;a href=&quot;http://jinnianshilongnian.iteye.com/blog/2305117&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;大神的博客&lt;/a&gt;里看到这样一句话：在开发高并发系统时，有三把利器用来保护系统：缓存
      
    
    </summary>
    
      <category term="golang" scheme="http://yoursite.com/categories/golang/"/>
    
    
      <category term="限制流量" scheme="http://yoursite.com/tags/%E9%99%90%E5%88%B6%E6%B5%81%E9%87%8F/"/>
    
      <category term="golang" scheme="http://yoursite.com/tags/golang/"/>
    
      <category term="高并发" scheme="http://yoursite.com/tags/%E9%AB%98%E5%B9%B6%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>tcpdump 抓包及Wireshark 解析包实例</title>
    <link href="http://yoursite.com/2018/05/07/crawlerpacket/"/>
    <id>http://yoursite.com/2018/05/07/crawlerpacket/</id>
    <published>2018-05-07T02:17:45.000Z</published>
    <updated>2018-05-07T09:04:19.660Z</updated>
    
    <content type="html"><![CDATA[<p>生产服务器使用nginx代理转发，开发环境和测试环境（没有nginx 代理转发其他服务器）都已通过测试，此时抓包进行分析数据流，进而排查问题。</p><ul><li>场景：负责客服系统 –（电呼模块）客服需要知道当前有多少用户在打电话排队，此时有2 种解决方案，一种是轮询，一种就是保持长链，轮询会小号比较大资源，时效性也逊色于长链，所有技术选型为采用长链方式，即采用websocket + swoole。</li><li>安全分析：不开放websocket 端口对外，访问swoole服务，需要请求nginx 对外开放端口 即nginx server 模块中 listen 对应值，然后nginx 做代理转发，转发到swoole 服务对应端口。</li><li><p>生产环境模拟：线上使用nginx 反向代理，即我们请求uri 先发送给前端nginx 代理服务器，再有此代理服务器转发给实际应用所在服务器。开发过程中，没有反向代理，服务正常运行，到线上链接不上服务器，此时采用抓包分析线上问题。</p><p><strong>此时自己开发机器[192.168.132.128]作为代理机，测试服务器[172.16.0.56] 作为服务机，模拟线上场景</strong></p><p>自己开发机器[192.168.132.128]nginx 配置</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attribute">upstream</span> websocket &#123;</span><br><span class="line">    <span class="attribute">server</span> <span class="number">127.0.0.1:9501</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attribute">upstream</span> globalWebsocket &#123;</span><br><span class="line">    <span class="comment"># 转发到测试机</span></span><br><span class="line">    <span class="attribute">server</span> <span class="number">172.16.0.56:9588</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="attribute">map</span> <span class="variable">$http_upgrade</span> <span class="variable">$connection_upgrade</span> &#123;</span><br><span class="line">    <span class="attribute">default</span> upgrade;</span><br><span class="line">    '' close;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attribute">listen</span> <span class="number">12345</span>;</span><br><span class="line">        <span class="comment">#listen [::]:80;</span></span><br><span class="line">        <span class="attribute">server_name</span> tickets.<span class="number">2345</span>.com ;</span><br><span class="line"><span class="attribute">charset</span> utf-<span class="number">8</span>;</span><br><span class="line">        <span class="attribute">index</span> index.html index.htm index.php default.html default.htm default.php;</span><br><span class="line">        <span class="attribute">root</span>  /home/buyf/quest/backend/web;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#include /home/buyf/quest.2345.com/backend/web.conf;</span></span><br><span class="line">        <span class="comment">#error_page   404   /404.html;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Deny access to PHP files in specific directory</span></span><br><span class="line">        <span class="comment">#location ~ /(wp-content|uploads|wp-includes|images)/.*\.php$ &#123; deny all; &#125;</span></span><br><span class="line"><span class="attribute">location</span> = /tickets &#123;</span><br><span class="line">        <span class="attribute">rewrite</span> .* /index.html <span class="literal">last</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> = /tickets/ &#123;</span><br><span class="line">        <span class="attribute">rewrite</span> .* /index.html <span class="literal">last</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> <span class="regexp">~ /tickets</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">rewrite</span><span class="regexp"> ^/tickets(/.*)</span> <span class="variable">$1</span> <span class="literal">last</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">client_max_body_size</span>    <span class="number">1000m</span>;</span><br><span class="line">        <span class="attribute">set</span> <span class="variable">$new_uri</span> <span class="variable">$uri</span>;</span><br><span class="line">        <span class="attribute">add_header</span> Access-Control-Allow-Origin  <span class="string">'*'</span>;</span><br><span class="line">        <span class="attribute">add_header</span> Access-Control-Allow-Methods <span class="string">'GET,POST,OPTIONS'</span>;</span><br><span class="line">        <span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.php?<span class="variable">$query_string</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">#location = /tickets/websocket &#123;</span></span><br><span class="line">       <span class="comment"># proxy_pass ws://tickets.2345.com:9501 ;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line">    <span class="attribute">location</span> <span class="regexp">~ /appManage(/.*)</span> &#123;</span><br><span class="line"><span class="attribute">set</span> <span class="variable">$root_path</span> appManage;</span><br><span class="line"><span class="attribute">root</span> /opt/case/dkwapp.<span class="number">2345</span>.com/dkwapp/web;</span><br><span class="line"><span class="attribute">set</span> <span class="variable">$new_uri</span> <span class="variable">$1</span>;</span><br><span class="line"><span class="attribute">try_files</span> <span class="variable">$1</span> <span class="variable">$1</span>/ /index.php?<span class="variable">$query_string</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="attribute">location</span> <span class="regexp">~ /websocket</span> &#123;</span><br><span class="line"><span class="attribute">proxy_pass</span> http://websocket;</span><br><span class="line">        <span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Connection <span class="string">"Upgrade"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attribute">location</span> <span class="regexp">~ /globalWebsocket</span> &#123;</span><br><span class="line">         <span class="comment">#   proxy_pass http://tickets.2345.com:9588;</span></span><br><span class="line"><span class="attribute">proxy_pass</span> http://globalWebsocket;</span><br><span class="line">                <span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line">                <span class="attribute">proxy_set_header</span> Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">                <span class="attribute">proxy_set_header</span> Connection <span class="string">"Upgrade"</span>;</span><br><span class="line">&#125;</span><br><span class="line">        <span class="comment">#include enable-php.conf;</span></span><br><span class="line"></span><br><span class="line">   <span class="attribute">location</span> <span class="regexp">~ \.php$</span> &#123;</span><br><span class="line">        <span class="attribute">fastcgi_pass</span>  unix:/tmp/php-cgi.sock;</span><br><span class="line">        <span class="attribute">fastcgi_index</span>  index.php;</span><br><span class="line">        <span class="attribute">fastcgi_param</span>  SCRIPT_FILENAME <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">        <span class="attribute">include</span>        fastcgi_params;</span><br><span class="line">        <span class="attribute">fastcgi_param</span> REQUEST_URI <span class="variable">$new_uri</span>;</span><br><span class="line">        <span class="attribute">fastcgi_intercept_errors</span> <span class="literal">off</span>;</span><br><span class="line">        <span class="attribute">fastcgi_connect_timeout</span> <span class="number">300</span>;</span><br><span class="line">        <span class="attribute">fastcgi_send_timeout</span> <span class="number">300</span>;</span><br><span class="line">        <span class="attribute">fastcgi_read_timeout</span> <span class="number">300</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     </span><br><span class="line"></span><br><span class="line">        <span class="attribute">location</span> <span class="regexp">~ .*\.(gif|jpg|jpeg|png|bmp|swf)$</span></span><br><span class="line"><span class="regexp"></span>        &#123;</span><br><span class="line">            <span class="attribute">add_header</span> Access-Control-Allow-Origin  <span class="string">'http://tickets.2345.com:8090'</span>;</span><br><span class="line">            <span class="attribute">add_header</span> Access-Control-Allow-Methods <span class="string">'GET,POST,OPTIONS'</span>;</span><br><span class="line">            <span class="attribute">expires</span>      <span class="number">30d</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">location</span> <span class="regexp">~ .*\.(js|css|json)?$</span></span><br><span class="line"><span class="regexp"></span>        &#123;</span><br><span class="line">            <span class="attribute">expires</span>      <span class="number">12h</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">location</span> <span class="regexp">~ /.well-known</span> &#123;</span><br><span class="line">            <span class="attribute">allow</span> all;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">location</span> <span class="regexp">~ /\.</span></span><br><span class="line"><span class="regexp"></span>        &#123;</span><br><span class="line">            <span class="attribute">deny</span> all;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">access_log</span>  /home/wwwlogs/quest.<span class="number">2345</span>.com.access.log;</span><br><span class="line">        <span class="attribute">error_log</span>  /home/wwwlogs/quest.<span class="number">2345</span>.com.<span class="literal">error</span>.log <span class="literal">notice</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><p>服务机[172.16.0.56] nginx 配置<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">upstream</span> websocket &#123;</span><br><span class="line"><span class="attribute">server</span> <span class="number">127.0.0.1:9501</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="attribute">upstream</span> globalWebsocket &#123;</span><br><span class="line">    <span class="comment"># 转发到本机9588 端口</span></span><br><span class="line">    <span class="attribute">server</span> <span class="number">127.0.0.1:9588</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attribute">log_format</span>  post  <span class="string">'<span class="variable">$remote_addr</span> - <span class="variable">$remote_user</span> [<span class="variable">$time_local</span>] "<span class="variable">$request</span>" '</span></span><br><span class="line"> <span class="string">'<span class="variable">$status</span> <span class="variable">$body_bytes_sent</span> <span class="variable">$request_time</span> <span class="variable">$upstream_response_time</span> "<span class="variable">$http_referer</span>" '</span></span><br><span class="line"> <span class="string">'"<span class="variable">$http_user_agent</span>" "<span class="variable">$http_x_forwarded_for</span>" body: <span class="variable">$request_body</span>'</span>;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">12345</span>;</span><br><span class="line">    <span class="attribute">server_name</span>  quest.<span class="number">2345</span>.com <span class="number">172.16.0.56</span> www.waptianqi.com;</span><br><span class="line">    <span class="attribute">index</span> index.html index.htm index.php;</span><br><span class="line"><span class="attribute">access_log</span> logs/quest.<span class="number">2345</span>.com_access.log main;</span><br><span class="line"><span class="attribute">error_log</span> logs/quest.<span class="number">2345</span>.com_error.log <span class="literal">notice</span>;</span><br><span class="line"><span class="attribute">set</span> <span class="variable">$next_root</span> /opt/case/quest.<span class="number">2345</span>.com/backend/web;</span><br><span class="line"></span><br><span class="line"><span class="attribute">charset</span>  utf-<span class="number">8</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">if</span> (<span class="variable">$request_uri</span> <span class="regexp">~ '/appManage')</span> &#123;</span><br><span class="line"><span class="attribute">set</span> <span class="variable">$next_root</span> /opt/case/dkwapp.<span class="number">2345</span>.com/web;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="attribute">root</span> <span class="variable">$next_root</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">location</span> = /appManage &#123;</span><br><span class="line"><span class="attribute">rewrite</span> .* /index.html <span class="literal">last</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="attribute">location</span> = /appManage/ &#123;</span><br><span class="line"><span class="attribute">rewrite</span> .* /index.html <span class="literal">last</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="attribute">location</span> = /appManage/index.html &#123;</span><br><span class="line"><span class="attribute">rewrite</span> .* /index.html <span class="literal">last</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="attribute">location</span> /appManage &#123;</span><br><span class="line"><span class="attribute">rewrite</span><span class="regexp"> ^/appManage(/.*)</span> <span class="variable">$1</span> <span class="literal">last</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="attribute">location</span> = /tickets &#123;</span><br><span class="line"><span class="attribute">rewrite</span> .* /index.html <span class="literal">last</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="attribute">location</span> = /tickets/ &#123;</span><br><span class="line"><span class="attribute">rewrite</span> .* /index.html <span class="literal">last</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="attribute">location</span> = /tickets/index.html &#123;</span><br><span class="line"><span class="attribute">rewrite</span> .* /index.html <span class="literal">last</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="attribute">location</span> /tickets &#123;</span><br><span class="line"><span class="attribute">rewrite</span><span class="regexp"> ^/tickets(/.*)</span> <span class="variable">$1</span> <span class="literal">last</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># websocket</span></span><br><span class="line"><span class="attribute">location</span> = /websocket &#123;</span><br><span class="line">    <span class="attribute">proxy_pass</span> http://websocket;</span><br><span class="line">        <span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Connection <span class="string">"Upgrade"</span>;</span><br><span class="line">        <span class="attribute">proxy_read_timeout</span> <span class="number">3600s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="attribute">location</span> <span class="regexp">~ /globalWebsocket</span> &#123;</span><br><span class="line"><span class="attribute">proxy_pass</span> http://globalWebsocket;</span><br><span class="line">                <span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line">                <span class="attribute">proxy_set_header</span> Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">                <span class="attribute">proxy_set_header</span> Connection <span class="string">"Upgrade"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attribute">location</span> / &#123;</span><br><span class="line"><span class="attribute">set</span> <span class="variable">$new_uri</span> <span class="variable">$uri</span>;</span><br><span class="line"><span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.php?<span class="variable">$query_string</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="attribute">location</span> <span class="regexp">~ \.php$</span> &#123;</span><br><span class="line"><span class="attribute">fastcgi_pass</span>   <span class="number">127.0.0.1:9002</span>;</span><br><span class="line"><span class="attribute">fastcgi_index</span>  index.php;</span><br><span class="line"><span class="attribute">fastcgi_param</span>  SCRIPT_FILENAME <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line"><span class="attribute">include</span>        fastcgi_params;</span><br><span class="line"><span class="attribute">fastcgi_param</span> REQUEST_URI <span class="variable">$new_uri</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">if</span> (<span class="variable">$request_method</span> = <span class="string">'POST'</span>) &#123;</span><br><span class="line"><span class="attribute">access_log</span> logs/quest.<span class="number">2345</span>.com_access.log post;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开发使用</span></span><br><span class="line"><span class="attribute">fastcgi_intercept_errors</span> <span class="literal">off</span>;</span><br><span class="line"><span class="attribute">fastcgi_connect_timeout</span> <span class="number">300</span>;</span><br><span class="line"><span class="attribute">fastcgi_send_timeout</span> <span class="number">300</span>;</span><br><span class="line"><span class="attribute">fastcgi_read_timeout</span> <span class="number">300</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>进行对9588 websocket 端口进行抓包<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo  tcpdump -i eth0  port 9588 -w /tmp/buyf.cap</span><br></pre></td></tr></table></figure></p><p><img src="/source/websocket.png" alt="websocket 请求"></p><p>使用Wireshark 进行网络分析<br><img src="/source/packet.png" alt="packets 详情"><br>通过返回值、tcp流、http流可以分析出整个通信过程。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;生产服务器使用nginx代理转发，开发环境和测试环境（没有nginx 代理转发其他服务器）都已通过测试，此时抓包进行分析数据流，进而排查问题。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;场景：负责客服系统 –（电呼模块）客服需要知道当前有多少用户在打电话排队，此时有2 种解决方案，一种是轮
      
    
    </summary>
    
      <category term="操作系统" scheme="http://yoursite.com/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="网络抓包" scheme="http://yoursite.com/tags/%E7%BD%91%E7%BB%9C%E6%8A%93%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>hexo 初体验</title>
    <link href="http://yoursite.com/2018/05/03/hexo-1/"/>
    <id>http://yoursite.com/2018/05/03/hexo-1/</id>
    <published>2018-05-03T08:24:07.000Z</published>
    <updated>2018-05-07T03:20:54.024Z</updated>
    
    <content type="html"><![CDATA[<p>为什么选择hexo ？之前php 版本个人博客，放在新浪sae上，更新不频繁，长时间不使用，被新浪收回资源，就想有没有免费、自己不需要维护相关服务的那？就觉得hexo 尝试下吧</p><p>有哪些优点那：</p><ul><li>支持Markdown</li><li>不需要维护服务器，长时间不使用，不担心数据丢失，网站挂掉</li><li>快速、简洁、高效，迅速利用靓丽的主题生成静态网页</li></ul><p>hexo 存在一个问题，安装好之后，如果更换电脑怎么办那？也是有办法的，在github 个人博客分支下，新建dev 分支，将hexo 生成文件都存放到dev 分支下，之后只需要安装好git、node 、hexo 就行<br>具体hexo 安装参考 <a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener">hexo 官方文档</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;为什么选择hexo ？之前php 版本个人博客，放在新浪sae上，更新不频繁，长时间不使用，被新浪收回资源，就想有没有免费、自己不需要维护相关服务的那？就觉得hexo 尝试下吧&lt;/p&gt;
&lt;p&gt;有哪些优点那：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;支持Markdown&lt;/li&gt;
&lt;li&gt;
      
    
    </summary>
    
      <category term="web开发" scheme="http://yoursite.com/categories/web%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
</feed>
